init:
	go mod init {{ .ModuleName }}
	go get -u github.com/spf13/cobra@latest
	go get -u github.com/spf13/viper
	mv env.sample .env
	mv gitignore .gitignore

dep:
	brew install dbmate
	go install github.com/kyleconroy/sqlc/cmd/sqlc@latest
	go install github.com/deepmap/oapi-codegen/cmd/oapi-codegen@latest

migrate:
	dbmate up

apigen:
	rm -rf api/gen
	mkdir api/gen
	oapi-codegen -package gen api/openapi.yaml > api/gen/spec.gen.go

dbgen_mongo:
{{- range .Databases }}
    {{- if eq .Type "mongo" }}
        {{- range .Models }}
	repogen -pkg=db/mongo -dest=db/mongo/{{ .Name | singularize }}_repo.go \
			-model={{ .Name | singularize | title }} -repo={{ .Name | singularize | title }}Repo
		{{- end }}
	{{- end }}
{{- end }}

dbgen_postgres:
	rm -rf db/postgres/dbgen
	sqlc -f db/postgres/sqlc.config.yaml generate

dbgen:
	rm -rf db/postgres/dbgen
	sqlc -f db/postgres/sqlc.config.yaml generate

genall: migrate prepdev apigen dbgen
	go mod tidy

dev:
	go run main.go serve

docker:
	docker image rm {{ .ModuleName }} & \
	docker build -t {{ .ModuleName }} . && \
	docker run --rm \
		--env-file ./.env.docker \
		-p 3000:3000 \
		--name {{ .ModuleName }} {{ .ModuleName }}


.PHONY: init dev prepdev apigen dbgen toolsup toolsdown