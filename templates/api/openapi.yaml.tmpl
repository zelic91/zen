
openapi: 3.1.0
info:
  version: 1.0.0
  title: {{ $.Api.Title }}
  description: {{ $.Api.Description }}
paths:
  /auth/signin:
    post:
      summary: Sign in
      operationId: SignIn
      security:
        - ApiKeyAuth: []
      requestBody:
        $ref: "#/components/requestBodies/SignIn"
      responses:
        "200":
          description: Success response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
  /auth/signup:
    post:
      summary: Sign up
      operationId: SignUp
      security:
        - ApiKeyAuth: []
      requestBody:
        $ref: "#/components/requestBodies/SignUp"
      responses:
        "201":
          description: Success response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
  {{- range $index, $resource := $.Api.Resources }}
  /{{ $resource.ModelRef }}:
    get:
      summary: list {{ $resource.ModelRef }}
      operationId: List{{ $resource.ModelRef | title }}
      security:
        - {{ $resource.Security }}: []
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: Search text
        - in: query
          name: offset
          schema:
            type: integer
          description: Offset
        - in: query
          name: limit
          schema:
            type: integer
          description: Limit
      responses:
        "200":
          $ref: "#/components/responses/{{ $resource.ModelRef | title }}"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      
    post:
      summary: create new {{ $resource.ModelRef | singularize }}
      operationId: Create{{ $resource.ModelRef | title | singularize }}
      security:
        - {{ $resource.Security }}: []
      requestBody:
        $ref: "#/components/requestBodies/{{ $resource.ModelRef | title | singularize }}"
      responses:
        "201":
          $ref: "#/components/responses/{{ $resource.ModelRef | title | singularize }}"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
  
  /{{ $resource.ModelRef }}/{id}:
    get:
      summary: get a {{ $resource.ModelRef | singularize }}
      operationId: Get{{ $resource.ModelRef | title | singularize }}
      security:
        - {{ $resource.Security }}: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          description: id
      responses:
        "200":
          $ref: "#/components/responses/{{ $resource.ModelRef | title | singularize }}"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"

    put:
      summary: update a {{ $resource.ModelRef | singularize }}
      operationId: Update{{ $resource.ModelRef | title | singularize }}
      security:
        - {{ $resource.Security }}: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          description: id
      requestBody:
        $ref: "#/components/requestBodies/{{ $resource.ModelRef | title | singularize }}"
      responses:
        "200":
          $ref: "#/components/responses/{{ $resource.ModelRef | title | singularize }}"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
    
    delete:
      summary: delete a {{ $resource.ModelRef | singularize }}
      operationId: Delete{{ $resource.ModelRef | title | singularize }}
      security:
        - {{ $resource.Security }}: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          description: id
      responses:
        "200":
          $ref: "#/components/responses/Default"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
  {{- end }}

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY

  requestBodies:
    SignUp:
      description: Sign up request body
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SignUp"

    SignIn:
      description: Sign In request body
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SignIn"

    {{- range $index, $resource := $.Api.Resources }}
    {{ $resource.ModelRef | title | singularize }}:
      description: Success response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/{{ $resource.ModelRef | title | singularize }}"
    {{- end }}

  responses:
    {{- range $index, $resource := $.Api.Resources }}
    {{ $resource.ModelRef | title | singularize }}:
      description: Success response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/{{ $resource.ModelRef | title | singularize }}"

    {{ $resource.ModelRef | title }}:
      description: Success response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/{{ $resource.ModelRef | title }}"
    {{- end }}

    Default:
      description: Success response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DefaultResponse"

    UnauthorizedError:
      description: API key is missing or invalid
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    BadRequestError:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  schemas:
    SignIn:
      type: object
      required:
        - username
        - password
      properties:
        password:
          type: string
        username:
          type: string

    SignUp:
      type: object
      required:
        - username
        - password
        - password_confirmation
      properties:
        password:
          type: string
        password_confirmation:
          type: string
        username:
          type: string

    Error:
      type: object
      required:
        - code
        - message
      properties:
        error:
          type: string
        code:
          type: integer
        message:
          type: string

    AuthResponse:
      type: object
      required:
        - accessToken
      properties:
        accessToken:
          type: string

    DefaultResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          default: Success

    {{- range $index, $resource := $.Api.Resources }}
    {{ $resource.ModelRef | title | singularize }}:
      type: object
      required:
        {{- range $name, $property := $resource.Model.Properties }}
          {{- if $property.NotNull }}
        - {{ $name }}
          {{- end }}
        {{- end }}
      properties:
        {{- range $name, $property := $resource.Model.Properties }}
        {{ $name }}:
          type: {{ .Type }}
        {{- end }}

    {{ $resource.ModelRef | title }}:
      type: object
      required:
        {{- range $name, $property := $resource.Model.Properties }}
          {{- if $property.NotNull }}
        - {{ $name }}
          {{- end }}
        {{- end }}
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        data:
          type: array
          items:
            $ref: '#/components/schemas/{{ $resource.ModelRef | title | singularize }}'
    {{- end }}
