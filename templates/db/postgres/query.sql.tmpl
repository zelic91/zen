-- Query
{{- range .Databases }}
    {{- if eq .Type "postgres" }}
        {{range $modelName, $model := .Models }}
            {{- if eq .Type "user" }}

-- {{ $modelName | title }}
-- name: Get{{ $modelName | singularize | title }}ById :one
SELECT * FROM {{ $modelName }}
WHERE id = $1 LIMIT 1;

-- name: ListAll{{ $modelName | title }} :many
SELECT * FROM {{ $modelName }}
ORDER BY created_at;

-- name: List{{ $modelName | title }} :many
SELECT * FROM {{ $modelName }}
WHERE title LIKE '%' || $1 || '%'
ORDER BY created_at
LIMIT $2
OFFSET $3;

-- name: Create{{ $modelName | singularize | title }} :one
INSERT INTO {{ $modelName }} (
    first_name,
    last_name,
    username,
    email,
    password_hashed,
    password_salt,
    status,
    created_by,
    updated_by,
    deleted_by,
    created_at,
    updated_at,
    deleted_at
) VALUES (
    $1, 
    $2,
    $3,
    $4,
    $5,
    $6,
    $7,
    $8,
    $9,
    $10,
    NOW(),
    NOW(),
    NOW()
)
RETURNING *;

-- name: Update{{ $modelName | singularize | title }} :one
UPDATE {{ $modelName }}
SET 
    first_name = $2,
    last_name = $3,
    username = $4,
    email = $5,
    password_hashed = $6,
    password_salt = $7,
    status = $8,
    updated_by = $9,
    updated_at = NOW()
WHERE id = $1
RETURNING *;

-- name: Delete{{ $modelName | singularize | title }} :exec
DELETE FROM {{ $modelName }}
WHERE id = $1;

            {{- else }}

-- {{ $modelName | title }}
-- name: Get{{ $modelName | singularize | title }}ById :one
SELECT * FROM {{ $modelName }}
WHERE id = $1 LIMIT 1;

-- name: ListAll{{ $modelName | title }} :many
SELECT * FROM {{ $modelName }}
ORDER BY created_at;

-- name: List{{ $modelName | title }} :many
SELECT * FROM {{ $modelName }}
WHERE title LIKE '%' || $1 || '%'
ORDER BY created_at
LIMIT $2
OFFSET $3;

-- name: Create{{ $modelName | singularize | title }} :one
INSERT INTO {{ $modelName }} (
    {{- range $propertyName, $property := .Properties }}
    {{ $propertyName }},
    {{- end }}
    created_by,
    updated_by,
    deleted_by,
    created_at,
    updated_at,
    deleted_at
) VALUES (
    {{- range loop 1 (len .Properties | add 3) }}
    ${{ . }},
    {{- end }}
    NOW(),
    NOW(),
    NOW()
)
RETURNING *;

-- name: Update{{ $modelName | singularize | title }} :one
UPDATE {{ $modelName }}
SET 
-- TODO: Add the corresponding update expression    
    updated_at = NOW()
WHERE id = $1
RETURNING *;

-- name: Delete{{ $modelName | singularize | title }} :exec
DELETE FROM {{ $modelName }}
WHERE id = $1;

            {{- end }}
        {{- end }}
    {{- end }}
{{- end }}
